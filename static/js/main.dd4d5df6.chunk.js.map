{"version":3,"sources":["components/Snake.js","components/Food.js","components/Board.js","components/ShopScrollArea.js","components/Shop.js","App.js","serviceWorker.js","index.js"],"names":["SnakeDot","styled","div","Snake","props","className","snakeDots","map","dot","i","style","left","top","key","SnakeFood","Food","dots","GameBoard","getRandomCoords","Math","floor","random","initialState","foods","speed","direction","Board","state","randomRate","onKeyDown","e","window","event","keyCode","setState","moveSnake","head","length","push","shift","onGameOver","resetGameState","onScoreReset","onRandomEvent","onFoodGen","foodArray","upgrades","getRandomCoords_Safe","setInterval","this","document","onkeydown","checkIfOutOfBounds","checkIfCollapsed","checkIfEat","snake","pop","forEach","foodList","index","element","splice","onScoreIncrement","growSnake","increaseSpeed","isValid","coords","newSnake","unshift","Component","StyledButton","Button","StyledDiv","ShopScrollArea","Object","keys","name","variant","block","size","onClick","onUpgrade","FoodCount","FoodOverlay","Shop","Badge","score","upgradeHandler","VerticalLine","StyledCol","Col","App","incrementScore","resetScore","handleUpgrade","newUp","u","target","getAttribute","Fragment","Container","fluid","backgroundColor","Row","height","right","zIndex","marginRight","xs","id","marginLeft","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dd4d5df6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SnakeDot = styled.div`\r\n  position: absolute;\r\n  width: 2%;\r\n  height: 2%;\r\n  background-color: #000;\r\n  border: 1px solid #fff;\r\n  z-index: 2;\r\n`;\r\n\r\nexport default function Snake(props) {\r\n  return (\r\n    <div className=\"snake\">\r\n      {props.snakeDots.map((dot, i) => {\r\n        const style = {\r\n          left: `${dot[0]}%`,\r\n          top: `${dot[1]}%`,\r\n        };\r\n\r\n        return <SnakeDot key={i} style={style}></SnakeDot>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SnakeFood = styled.div`\r\n  position: absolute;\r\n  width: 2%;\r\n  height: 2%;\r\n  background-color: red;\r\n  border: 1px solid #fff;\r\n  z-index: 1;\r\n`;\r\n\r\nexport function Food(props) {\r\n    return (\r\n      <div className=\"foods\">\r\n      {props.dots.map((dot, i) => {\r\n        const style = {\r\n          left: `${dot[0]}%`,\r\n          top: `${dot[1]}%`,\r\n        };\r\n        return <SnakeFood className= \"food\" key={i} style={style}></SnakeFood>;\r\n      })}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Food;\r\n","import React, { Component } from \"react\";\r\nimport Snake from \"./Snake\";\r\nimport Food from \"./Food\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GameBoard = styled.div`\r\n  position: relative;\r\n  margin: 50px auto;\r\n  width: 500px;\r\n  height: 500px;\r\n  border: 2px solid black;\r\n  background-color: bisque;\r\n`;\r\n\r\nconst getRandomCoords = () => {\r\n  let min = 1;\r\n  let max = 98;\r\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n  return [x, y];\r\n};\r\n\r\nconst initialState = {\r\n  foods: [getRandomCoords()],\r\n  speed: 200,\r\n  direction: \"RIGHT\",\r\n  snakeDots: [\r\n    [0, 0],\r\n    [2, 0],\r\n    [4, 0],\r\n  ],\r\n};\r\n\r\nclass Board extends Component {\r\n  state = { \r\n    ...initialState, \r\n    randomRate: 500,\r\n  };\r\n\r\n  componentDidMount() {\r\n    setInterval(this.moveSnake, this.state.speed);\r\n    setInterval(this.onRandomEvent, this.state.randomRate);\r\n    document.onkeydown = this.onKeyDown;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkIfOutOfBounds();\r\n    this.checkIfCollapsed();\r\n    this.checkIfEat();\r\n  }\r\n\r\n  onKeyDown = (e) => {\r\n    e = e || window.event;\r\n    switch (e.keyCode) {\r\n      case 87:\r\n      case 38:\r\n        if (this.state.direction !== \"DOWN\") {\r\n          this.setState({ direction: \"UP\" });\r\n        }\r\n        break;\r\n      case 83:\r\n      case 40:\r\n        if (this.state.direction !== \"UP\") {\r\n          this.setState({ direction: \"DOWN\" });\r\n        }\r\n        break;\r\n      case 68:\r\n      case 39:\r\n        if (this.state.direction !== \"LEFT\") {\r\n          this.setState({ direction: \"RIGHT\" });\r\n        }\r\n        break;\r\n      case 65:\r\n      case 37:\r\n        if (this.state.direction !== \"RIGHT\") {\r\n          this.setState({ direction: \"LEFT\" });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  moveSnake = () => {\r\n    let dots = [...this.state.snakeDots];\r\n    let head = dots[dots.length - 1];\r\n\r\n    switch (this.state.direction) {\r\n      case \"RIGHT\":\r\n        head = [head[0] + 2, head[1]];\r\n        break;\r\n      case \"LEFT\":\r\n        head = [head[0] - 2, head[1]];\r\n        break;\r\n      case \"DOWN\":\r\n        head = [head[0], head[1] + 2];\r\n        break;\r\n      case \"UP\":\r\n        head = [head[0], head[1] - 2];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dots.push(head);\r\n    dots.shift();\r\n    this.setState({\r\n      snakeDots: dots,\r\n    });\r\n  };\r\n\r\n  checkIfOutOfBounds() {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\r\n      this.onGameOver();\r\n    }\r\n  }\r\n\r\n  checkIfCollapsed() {\r\n    let snake = [...this.state.snakeDots];\r\n    let head = snake.pop();\r\n    snake.forEach((dot) => {\r\n      if (head[0] === dot[0] && head[1] === dot[1]) {\r\n        this.onGameOver();\r\n      }\r\n    });\r\n  }\r\n\r\n  checkIfEat() {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    let foodList = this.state.foods;\r\n\r\n    let index = -1;\r\n    for (let i = 0; i < foodList.length; i++) {\r\n      const element = foodList[i];\r\n      if (element[0] === head[0] && element[1] === head[1]) {\r\n        index = i;\r\n      }\r\n    }\r\n\r\n    if (index > -1) {\r\n      foodList.splice(index, 1);\r\n\r\n      // essential\r\n      this.props.onScoreIncrement();\r\n      this.growSnake();\r\n      this.increaseSpeed();\r\n    }\r\n  }\r\n\r\n  getRandomCoords_Safe() {\r\n    let isValid = true;\r\n    while (isValid) {\r\n      let coords = getRandomCoords();\r\n      let snake = [...this.state.snakeDots];\r\n      snake.forEach((dot) => {\r\n        if (coords[0] === dot[0] && coords[1] === dot[1]) {\r\n          isValid = false;\r\n        }\r\n      });\r\n\r\n      if (isValid) {\r\n        return coords;\r\n      }\r\n    }\r\n  }\r\n\r\n  growSnake() {\r\n    let newSnake = [...this.state.snakeDots];\r\n    newSnake.unshift([]);\r\n    this.setState({\r\n      snakeDots: newSnake,\r\n    });\r\n  }\r\n\r\n  increaseSpeed() {\r\n    if (this.state.speed > 10) {\r\n      this.setState({\r\n        speed: this.state.speed - 10,\r\n      });\r\n    }\r\n  }\r\n\r\n  resetGameState() {\r\n    this.setState(initialState);\r\n  }\r\n\r\n  onGameOver = () => {\r\n    this.resetGameState();\r\n    this.props.onScoreReset();\r\n  };\r\n\r\n  onRandomEvent = () => {\r\n    let rand = Math.random();\r\n    if (rand < 0.1) {\r\n      this.onFoodGen();\r\n    }\r\n  };\r\n\r\n  onFoodGen = () => {\r\n    var foodArray = [...this.state.foods];\r\n    if (foodArray.length < this.props.upgrades[\"Max Food\"]) {\r\n      foodArray.push(this.getRandomCoords_Safe());\r\n    }\r\n    this.setState({\r\n      foods: foodArray,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GameBoard className=\"board\">\r\n        <Snake snakeDots={this.state.snakeDots} />\r\n        <Food dots={this.state.foods} />\r\n      </GameBoard>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled(Button)``;\r\n\r\nconst StyledDiv = styled.div`\r\n  flex: 1;\r\n  background: teal;\r\n  overflow-y: scroll;\r\n  width: 100%;\r\n`;\r\n\r\nexport function ShopScrollArea(props) {\r\n  const btnVariant = \"primary\";\r\n  const upgrades = Object.keys(props.upgrades);\r\n  return (\r\n    <StyledDiv>\r\n      {upgrades.map((name, i) => (\r\n        <StyledButton\r\n          variant={btnVariant}\r\n          block\r\n          size=\"lg\"\r\n          key={i}\r\n          name={name}\r\n          onClick={props.onUpgrade}\r\n        >\r\n          {`Upgrade ${name}`}\r\n        </StyledButton>\r\n      ))}\r\n    </StyledDiv>\r\n  );\r\n}\r\n\r\nexport default ShopScrollArea;\r\n","import React, { Component } from \"react\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport styled from \"styled-components\";\r\nimport ShopScrollArea from \"./ShopScrollArea\";\r\n\r\nconst FoodCount = styled.div`\r\n  position: relative;\r\n  width: auto;\r\n  height: auto;\r\n  text-align: center;\r\n  z-index: 1;\r\n`;\r\n\r\nconst FoodOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 24px;\r\n  background-color: white;\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nexport class Shop extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"shop\">\r\n        <div className=\"food-display-bar\">\r\n          <FoodOverlay />\r\n          <FoodCount>\r\n            Food: <Badge variant=\"dark\">{this.props.score}</Badge>\r\n          </FoodCount>\r\n        </div>\r\n        <ShopScrollArea\r\n          className=\"shop\"\r\n          upgrades={this.props.upgrades}\r\n          onUpgrade={this.props.upgradeHandler}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shop;\r\n","import React, { Component } from \"react\";\nimport Board from \"./components/Board\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Shop from \"./components/Shop\";\nimport styled from \"styled-components\";\n\nconst VerticalLine = styled.div`\n  border-left: 6px solid black;\n  height: 100%;\n  position: absolute;\n  top: 0;\n`;\n\nconst StyledCol = styled(Col)`\n  margin: 0;\n  padding: 0;\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      upgrades: {\n        \"Max Food\": 2,\n        \"u1\": 0,\n        \"u2\": 0,\n        \"u3\": 0,\n      },\n    };\n  }\n\n  incrementScore = () => {\n    this.setState({\n      score: this.state.score + 1,\n    });\n  };\n\n  resetScore = () => {\n    this.setState({\n      score: 0,\n    });\n  };\n\n  handleUpgrade = (e) => {\n    let newUp = this.state.upgrades;\n    for (let u of newUp) {\n      if(e.target.getAttribute('name') === u[0]){\n        u[1] = u[1]+1;\n      }\n    }\n    this.setState({\n      upgrades: newUp\n    })\n  };\n\n  render() {\n    const {upgrades} = this.state;\n    return (\n      <React.Fragment>\n        <Container fluid style={{ backgroundColor: \"teal\" }}>\n          <Row style={{ height: \"100vh\" }}>\n            <StyledCol className=\"shop-area\">\n              <Shop\n                score={this.state.score}\n                upgradeHandler={this.handleUpgrade}\n                upgrades={upgrades}\n              />\n              <VerticalLine\n                style={{ right: \"0\", zIndex: \"10\", marginRight: \"-2px\" }}\n              />\n            </StyledCol>\n            <StyledCol xs={6} className=\"game-area no-padding\">\n              <Board\n                onScoreIncrement={this.incrementScore}\n                onScoreReset={this.resetScore}\n                upgrades={upgrades}\n              />\n            </StyledCol>\n            <StyledCol className=\"third-area\" id=\"no-padding\">\n              <VerticalLine\n                style={{ left: \"0\", zIndex: \"10\", marginLeft: \"-2px\" }}\n              />\n            </StyledCol>\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <StrictMode>\n    <App/>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}