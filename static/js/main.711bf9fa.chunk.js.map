{"version":3,"sources":["components/Snake.js","components/Food.js","components/Board.js","components/ShopScrollArea.js","components/Shop.js","App.js","serviceWorker.js","index.js"],"names":["SnakeDot","styled","div","Snake","className","this","props","snakeDots","map","dot","i","style","left","top","key","Component","SnakeFood","attrs","Food","GameBoard","getRandomCoords","Math","floor","random","initialState","food","speed","direction","Board","state","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","head","length","push","shift","onGameOver","resetGameState","onScoreReset","setInterval","document","onkeydown","checkIfOutOfBounds","checkIfCollapsed","checkIfEat","snake","pop","forEach","getRandomFood","onScoreIncrement","growSnake","increaseSpeed","newSnake","unshift","StyledButton","Button","StyledDiv","ShopScrollArea","upgradesList","upgrades","item","name","variant","block","size","onClick","onUpgrade","FoodCount","FoodOverlay","Shop","Badge","score","upgradeHandler","VerticalLine","StyledCol","Col","App","incrementScore","resetScore","handleUpgrade","newUp","u","target","getAttribute","Fragment","Container","fluid","backgroundColor","Row","height","right","zIndex","marginRight","xs","id","marginLeft","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.711bf9fa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SnakeDot = styled.div`\r\n  position: absolute;\r\n  width: 2%;\r\n  height: 2%;\r\n  background-color: #000;\r\n  border: 1px solid #fff;\r\n  z-index: 2;\r\n`;\r\n\r\nexport default class Snake extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"snake\">\r\n        {this.props.snakeDots.map((dot, i) => {\r\n          const style = {\r\n            left: `${dot[0]}%`,\r\n            top: `${dot[1]}%`,\r\n          }\r\n\r\n          return <SnakeDot key={i} style={style}></SnakeDot>;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SnakeFood = styled.div.attrs((props) => ({\r\n  dot: props.dot,\r\n}))`\r\n  position: absolute;\r\n  width: 2%;\r\n  height: 2%;\r\n  background-color: red;\r\n  border: 1px solid #fff;\r\n  z-index: 1;\r\n  left: ${(props) => props.dot[0]}%;\r\n  top: ${(props) => props.dot[1]}%;\r\n`;\r\n\r\nexport default class Food extends Component {\r\n  render() {\r\n    return <SnakeFood className=\"food\" dot={this.props.dot}></SnakeFood>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Snake from \"./Snake\";\r\nimport Food from \"./Food\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GameBoard = styled.div`\r\n  position: relative;\r\n  margin: 50px auto;\r\n  width: 500px;\r\n  height: 500px;\r\n  border: 2px solid black;\r\n  background-color: bisque;\r\n`;\r\n\r\nconst getRandomCoords = () => {\r\n  let min = 1;\r\n  let max = 98;\r\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n  return [x, y];\r\n};\r\n\r\nconst initialState = {\r\n  food: getRandomCoords(),\r\n  speed: 200,\r\n  direction: \"RIGHT\",\r\n  snakeDots: [\r\n    [0, 0],\r\n    [2, 0],\r\n    [4, 0],\r\n  ],\r\n};\r\n\r\nclass Board extends Component {\r\n  state = initialState;\r\n\r\n  componentDidMount() {\r\n    setInterval(this.moveSnake, this.state.speed);\r\n    document.onkeydown = this.onKeyDown;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkIfOutOfBounds();\r\n    this.checkIfCollapsed();\r\n    this.checkIfEat();\r\n  }\r\n\r\n  onKeyDown = (e) => {\r\n    e = e || window.event;\r\n    switch (e.keyCode) {\r\n      case 87:\r\n      case 38:\r\n        if (this.state.direction !== \"DOWN\") {\r\n          this.setState({ direction: \"UP\" });\r\n        }\r\n        break;\r\n      case 83:\r\n      case 40:\r\n        if (this.state.direction !== \"UP\") {\r\n          this.setState({ direction: \"DOWN\" });\r\n        }\r\n        break;\r\n      case 68:\r\n      case 39:\r\n        if (this.state.direction !== \"LEFT\") {\r\n          this.setState({ direction: \"RIGHT\" });\r\n        }\r\n        break;\r\n      case 65:\r\n      case 37:\r\n        if (this.state.direction !== \"RIGHT\") {\r\n          this.setState({ direction: \"LEFT\" });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  moveSnake = () => {\r\n    let dots = [...this.state.snakeDots];\r\n    let head = dots[dots.length - 1];\r\n\r\n    switch (this.state.direction) {\r\n      case \"RIGHT\":\r\n        head = [head[0] + 2, head[1]];\r\n        break;\r\n      case \"LEFT\":\r\n        head = [head[0] - 2, head[1]];\r\n        break;\r\n      case \"DOWN\":\r\n        head = [head[0], head[1] + 2];\r\n        break;\r\n      case \"UP\":\r\n        head = [head[0], head[1] - 2];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dots.push(head);\r\n    dots.shift();\r\n    this.setState({\r\n      snakeDots: dots,\r\n    });\r\n  };\r\n\r\n  checkIfOutOfBounds() {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\r\n      this.onGameOver();\r\n    }\r\n  }\r\n\r\n  checkIfCollapsed() {\r\n    let snake = [...this.state.snakeDots];\r\n    let head = snake.pop();\r\n    snake.forEach((dot) => {\r\n      if (head[0] === dot[0] && head[1] === dot[1]) {\r\n        this.onGameOver();\r\n      }\r\n    });\r\n  }\r\n\r\n  checkIfEat() {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    let food = this.state.food;\r\n    if (head[0] === food[0] && head[1] === food[1]) {\r\n      this.setState({\r\n        food: this.getRandomFood(),\r\n      });\r\n      this.props.onScoreIncrement();\r\n      this.growSnake();\r\n      this.increaseSpeed();\r\n    }\r\n  }\r\n\r\n  getRandomFood() {\r\n    let food = getRandomCoords();\r\n    let snake = [...this.state.snakeDots];\r\n    snake.forEach((dot) => {\r\n      if (food[0] === dot[0] && food[1] === dot[1]) {\r\n        food = getRandomCoords();\r\n      }\r\n    });\r\n    return food;\r\n  }\r\n\r\n  growSnake() {\r\n    let newSnake = [...this.state.snakeDots];\r\n    newSnake.unshift([]);\r\n    this.setState({\r\n      snakeDots: newSnake,\r\n    });\r\n  }\r\n\r\n  increaseSpeed() {\r\n    if (this.state.speed > 10) {\r\n      this.setState({\r\n        speed: this.state.speed - 10,\r\n      });\r\n    }\r\n  }\r\n\r\n  resetGameState() {\r\n    this.setState(initialState);\r\n    this.setState({\r\n      food: this.getRandomFood(),\r\n    });\r\n  }\r\n\r\n  onGameOver = () => {\r\n    this.resetGameState();\r\n    this.props.onScoreReset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GameBoard className=\"board\">\r\n        <Snake snakeDots={this.state.snakeDots} />\r\n        <Food dot={this.state.food} />\r\n      </GameBoard>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled(Button)``;\r\n\r\nconst StyledDiv = styled.div`\r\n  flex: 1;\r\n  background: teal;\r\n  overflow-y: scroll;\r\n  width: 100%;\r\n`;\r\n\r\nexport class ShopScrollArea extends Component {\r\n  state = {\r\n    upgradesList: this.props.upgrades.map((item) => item[0])\r\n  }\r\n\r\n  render() {\r\n    const btnVariant = \"primary\";\r\n    return (\r\n      <StyledDiv>\r\n      {this.state.upgradesList.map((name, i) => (\r\n        <StyledButton\r\n          variant={btnVariant}\r\n          block\r\n          size=\"lg\"\r\n          key={i}\r\n          name={name}\r\n          onClick={this.props.onUpgrade}\r\n        >\r\n          {`Upgrade ${name}`}\r\n        </StyledButton>\r\n      ))}\r\n      </StyledDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShopScrollArea;\r\n","import React, { Component } from \"react\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport styled from \"styled-components\";\r\nimport ShopScrollArea from \"./ShopScrollArea\";\r\n\r\nconst FoodCount = styled.div`\r\n  position: relative;\r\n  width: auto;\r\n  height: auto;\r\n  text-align: center;\r\n  z-index: 1;\r\n`;\r\n\r\nconst FoodOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 24px;\r\n  background-color: white;\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nexport class Shop extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"shop\">\r\n        <div className=\"food-display-bar\">\r\n          <FoodOverlay />\r\n          <FoodCount>\r\n            Food: <Badge variant=\"dark\">{this.props.score}</Badge>\r\n          </FoodCount>\r\n        </div>\r\n        <ShopScrollArea\r\n          className=\"shop\"\r\n          upgrades={this.props.upgrades}\r\n          onUpgrade={this.props.upgradeHandler}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shop;\r\n","import React, { Component } from \"react\";\nimport Board from \"./components/Board\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Shop from \"./components/Shop\";\nimport styled from \"styled-components\";\n\nconst VerticalLine = styled.div`\n  border-left: 6px solid black;\n  height: 100%;\n  position: absolute;\n  top: 0;\n`;\n\nconst StyledCol = styled(Col)`\n  margin: 0;\n  padding: 0;\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      upgrades: [\n        [\"Max Food\", 0],\n        [\"u1\", 0],\n        [\"u2\", 0],\n        [\"u3\", 0],\n      ],\n    };\n  }\n\n  incrementScore = () => {\n    this.setState({\n      score: this.state.score + 1,\n    });\n  };\n\n  resetScore = () => {\n    this.setState({\n      score: 0,\n    });\n  };\n\n  handleUpgrade = (e) => {\n    let newUp = this.state.upgrades;\n    for (let u of newUp) {\n      if(e.target.getAttribute('name') === u[0]){\n        u[1] = u[1]+1;\n      }\n    }\n    this.setState({\n      upgrades: newUp\n    })\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Container fluid style={{ backgroundColor: \"teal\" }}>\n          <Row style={{ height: \"100vh\" }}>\n            <StyledCol className=\"shop-area\">\n              <Shop\n                score={this.state.score}\n                upgradeHandler={this.handleUpgrade}\n                upgrades={this.state.upgrades}\n              />\n              <VerticalLine\n                style={{ right: \"0\", zIndex: \"10\", marginRight: \"-2px\" }}\n              />\n            </StyledCol>\n            <StyledCol xs={6} className=\"game-area no-padding\">\n              <Board\n                onScoreIncrement={this.incrementScore}\n                onScoreReset={this.resetScore}\n              />\n            </StyledCol>\n            <StyledCol className=\"third-area\" id=\"no-padding\">\n              <VerticalLine\n                style={{ left: \"0\", zIndex: \"10\", marginLeft: \"-2px\" }}\n              />\n            </StyledCol>\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <StrictMode>\n    <App/>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}